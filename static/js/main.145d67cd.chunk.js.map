{"version":3,"sources":["components/PostsList/PostsList.jsx","api/posts.js","api/api.js","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectPostId","postId","onClose","className","map","post","key","id","userId","title","type","onClick","defaultProps","request","url","options","fetch","then","response","json","NewCommentForm","useState","nameInput","setName","email","setEmail","body","setBody","warning","setWarning","handleChange","event","target","name","value","onSubmit","preventDefault","object","method","JSON","stringify","headers","onChange","placeholder","style","color","PostDetails","postComments","setPostComments","isHide","setIsHide","useEffect","data","filter","trim","length","getPostComments","result","removeComment","commentId","remove","current","comment","App","setPosts","selectedUser","setSelectedUser","postDetails","setPostDetails","visiblePosts","e","getPostDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.145d67cd.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, selectPostId, postId, onClose }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>{`[User #${post.userId}]`}</b>\n            {post.title}\n          </div>\n          {(postId !== post.id) ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => selectPostId(post.id)}\n            >\n              Open\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button my-button\"\n              onClick={() => onClose()}\n            >\n              Close\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectPostId: PropTypes.func.isRequired,\n  postId: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  postId: -1,\n};\n","import { BASE_URL } from './api';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(response => response.json());\n\nexport const getPosts = () => request('/posts')\n  .then(posts => posts.data);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`)\n  .then(post => post.data);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\nimport { create } from '../../api/comments';\n\nexport const NewCommentForm = ({ id }) => {\n  const [nameInput, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [warning, setWarning] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setWarning('');\n\n        return setName(value);\n\n      case 'email':\n        setWarning('');\n\n        return setEmail(value);\n\n      case 'body':\n        setWarning('');\n\n        return setBody(value);\n\n      default:\n        return 0;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!nameInput || !email || !body) {\n      return setWarning('Some field empty');\n    }\n\n    const newComment = {\n      postId: id,\n      name: nameInput,\n      email,\n      body,\n    };\n\n    create(newComment);\n\n    setName('');\n    setEmail('');\n\n    return setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={nameInput}\n          onChange={handleChange}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={handleChange}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n      <div style={{ color: 'red' }}>{warning}</div>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import { request } from './posts';\n\nexport const getPostComments = postId => request('/comments')\n  .then(posts => posts.data.filter(post => post.postId === postId))\n  .then(posts => posts.filter(post => post.body.trim().length > 0));\n\nexport const remove = (commentId) => {\n  request(`/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const create = (object) => {\n  request(`/comments`, {\n    method: 'POST',\n    body: JSON.stringify(object),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, remove } from '../../api/comments';\n\nexport const PostDetails = ({ postId, body }) => {\n  const [postComments, setPostComments] = useState('');\n  const [isHide, setIsHide] = useState(false);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(result => setPostComments(result));\n  });\n\n  const toggleComments = () => {\n    setIsHide(current => !current);\n  };\n\n  const removeComment = (commentId) => {\n    remove(commentId);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{body}</p>\n      </section>\n\n      {(postComments.length !== 0) ? (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={toggleComments}\n          >\n            {`${isHide ? 'Show' : 'Hide'} ${postComments.length} comments`}\n          </button>\n          {(!isHide) && (\n            <ul className=\"PostDetails__list\">\n              {postComments.map(comment => (\n                <li\n                  key={comment.id}\n                  className=\"PostDetails__list-item\"\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => removeComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n\n        </section>\n      ) : (<div>No comments</div>)}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm id={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPostDetails, getPosts } from './api/posts';\n\nexport const App = () => {\n  const [posts, setPosts] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [postDetails, setPostDetails] = useState('');\n\n  useEffect(() => {\n    getPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  const selectPostId = (postId) => {\n    getPostDetails(postId)\n      .then(result => setPostDetails(result));\n  };\n\n  const closeDetails = () => {\n    setPostDetails('');\n  };\n\n  let visiblePosts = [...posts];\n\n  if (selectedUser !== 0) {\n    visiblePosts = posts.filter(post => post.userId === selectedUser);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={e => setSelectedUser(+e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {(posts.length !== 0) && (\n            <PostsList\n              posts={visiblePosts}\n              selectPostId={selectPostId}\n              postId={postDetails.id}\n              onClose={closeDetails}\n            />\n          )}\n        </div>\n\n        {(postDetails.length !== 0) && (\n          <div className=\"App__content\">\n            <PostDetails\n              postId={postDetails.id}\n              body={postDetails.body}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}