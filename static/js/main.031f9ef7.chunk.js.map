{"version":3,"sources":["components/PostsList/PostsList.jsx","api/posts.js","api/api.js","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectPostId","postId","onClose","className","map","post","key","id","userId","title","type","onClick","defaultProps","request","url","options","fetch","then","response","json","NewCommentForm","useState","nameInput","setName","email","setEmail","body","setBody","warning","setWarning","handleChange","event","target","name","value","onSubmit","object","preventDefault","method","JSON","stringify","headers","onChange","placeholder","PostDetails","postComments","setPostComments","isHide","setIsHide","useEffect","data","filter","trim","length","getPostComments","result","removeComment","commentId","remove","current","comment","App","setPosts","selectedUser","setSelectedUser","postDetails","setPostDetails","visiblePosts","e","users","user","getPostDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.031f9ef7.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, selectPostId, postId, onClose }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>{`[User #${post.userId}]`}</b>\n            {post.title}\n          </div>\n          {(postId !== post.id) ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => selectPostId(post.id)}\n            >\n              Open\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button my-button\"\n              onClick={() => onClose()}\n            >\n              Close\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectPostId: PropTypes.func.isRequired,\n  postId: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  postId: -1,\n};\n","import { BASE_URL } from './api';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(response => response.json());\n\nexport const getPosts = () => request('/posts')\n  .then(posts => posts.data);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`)\n  .then(post => post.data);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\nimport { create } from '../../api/comments';\n\nexport const NewCommentForm = ({ id }) => {\n  const [nameInput, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [warning, setWarning] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setWarning('');\n\n        return setName(value);\n\n      case 'email':\n        setWarning('');\n\n        return setEmail(value);\n\n      case 'body':\n        setWarning('');\n\n        return setBody(value);\n\n      default:\n        return name;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!nameInput || !email || !body) {\n      setWarning('Some field empty');\n    } else {\n      const newComment = {\n        postId: id,\n        name: nameInput,\n        email,\n        body,\n      };\n\n      create(newComment);\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={nameInput}\n          onChange={handleChange}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={handleChange}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n      <div className=\"warning-message\">{warning}</div>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import { request } from './posts';\n\nexport const getPostComments = postId => request('/comments')\n  .then(posts => posts.data.filter(post => post.postId === postId))\n  .then(posts => posts.filter(post => post.body.trim().length > 0));\n\nexport const remove = (commentId) => {\n  request(`/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const create = (object) => {\n  request(`/comments`, {\n    method: 'POST',\n    body: JSON.stringify(object),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, remove } from '../../api/comments';\n\nexport const PostDetails = ({ postId, body }) => {\n  const [postComments, setPostComments] = useState('');\n  const [isHide, setIsHide] = useState(false);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(result => setPostComments(result));\n  }, [postId, postComments]);\n\n  const toggleComments = () => {\n    setIsHide(current => !current);\n  };\n\n  const removeComment = (commentId) => {\n    remove(commentId);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{body}</p>\n      </section>\n\n      {(postComments.length !== 0) ? (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={toggleComments}\n          >\n            {`${isHide ? 'Show' : 'Hide'} ${postComments.length} comments`}\n          </button>\n          {(!isHide) && (\n            <ul className=\"PostDetails__list\">\n              {postComments.map(comment => (\n                <li\n                  key={comment.id}\n                  className=\"PostDetails__list-item\"\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => removeComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n\n        </section>\n      ) : (<div>No comments</div>)}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm id={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPostDetails, getPosts } from './api/posts';\nimport users from './api/users.json';\n\nexport const App = () => {\n  const [posts, setPosts] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [postDetails, setPostDetails] = useState('');\n\n  useEffect(() => {\n    getPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  const selectPostId = (postId) => {\n    getPostDetails(postId)\n      .then(result => setPostDetails(result));\n  };\n\n  const closeDetails = () => {\n    setPostDetails('');\n  };\n\n  let visiblePosts = [...posts];\n\n  if (selectedUser !== 0) {\n    visiblePosts = posts.filter(post => post.userId === selectedUser);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={e => setSelectedUser(+e.target.value)}\n          >\n            <option\n              value=\"0\"\n              key=\"0\"\n            >\n              All users\n            </option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {(posts.length !== 0) && (\n            <PostsList\n              posts={visiblePosts}\n              selectPostId={selectPostId}\n              postId={postDetails.id}\n              onClose={closeDetails}\n            />\n          )}\n        </div>\n\n        {(postDetails.length !== 0) && (\n          <div className=\"App__content\">\n            <PostDetails\n              postId={postDetails.id}\n              body={postDetails.body}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}